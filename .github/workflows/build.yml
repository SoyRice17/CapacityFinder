name: Build Multi-Platform Executives

on:
  push:
    tags:
      - 'v*'  # v1.0, v2.1 같은 태그가 푸시될 때 실행

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            output_name: CapacityFinder
            build_cmd: pyinstaller --onefile --windowed main.py --name CapacityFinder
          - os: windows-latest
            platform: windows
            output_name: CapacityFinder.exe
            build_cmd: pyinstaller --onefile --windowed main.py --name CapacityFinder
          - os: macos-latest
            platform: macos
            output_name: CapacityFinder
            build_cmd: pyinstaller --onefile --windowed main.py --name CapacityFinder

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5 pyinstaller

    - name: Build executable with PyInstaller
      run: ${{ matrix.build_cmd }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.output_name }}
        asset_name: ${{ matrix.platform }}-${{ matrix.output_name }}
        asset_content_type: application/octet-stream
