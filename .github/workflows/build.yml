name: Build Multi-Platform Executables

on:
  push:
    tags:
      - 'v*'  # v1.0, v2.1 같은 태그가 푸시될 때 실행

permissions:
  contents: write  # 릴리스 생성을 위한 권한

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # 하나 실패해도 다른 빌드 계속 진행
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            output_name: CapacityFinder
          - os: windows-latest
            platform: windows
            output_name: CapacityFinder.exe
          - os: macos-latest
            platform: macos
            output_name: CapacityFinder

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5 pyinstaller

    - name: Build executable with PyInstaller
      run: pyinstaller --onefile --windowed main.py --name CapacityFinder

    - name: Check if file exists (Debug)
      run: |
        echo "=== 빌드 결과 확인 ==="
        ls -la dist/
        echo "=== 찾고 있는 파일: ${{ matrix.output_name }} ==="
      shell: bash

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        files: ./dist/${{ matrix.output_name }}
        name: Release ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        fail_on_unmatched_files: true
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
